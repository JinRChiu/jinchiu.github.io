{"version":3,"sources":["D3Practice/PiePage/PiePage.js","D3Practice/PiePage/index.js","D3Practice/BarPage/index.js","D3Practice/BarPage/BarPage.js","D3Practice/LinePage/index.js","D3Practice/LinePage/LinePage.js","MainPage/Const.js","components/Input.js","D3Practice/ProjectPage/LegendInfo.js","D3Practice/ProjectPage/ProjectPage.js","D3Practice/ProjectPage/index.js","components/Button.js","MainPage/MainPage.js","MainPage/index.js","App.js","serviceWorker.js","index.js","Icon/error.svg","Icon/time.svg"],"names":["styled","div","PiePage","props","data","width","height","innerRadius","outerRadius","myColor","svgRef","useRef","format","d3","createPie","value","d","max","sort","createArc","classed","cornerRadius","padAngle","labelArc","pathAnim","aim","dir","transition","duration","ease","attr","setCenterText","thisDonut","paths","selectAll","total_value","p","sum","select","text","toFixed","useEffect","svg","current","svgWithData","svgWithUpdate","enter","append","merge","on","i","j","this","this_path_value","thisPath","clicked","exit","remove","centroid","style","center_r","JSON","stringify","clsaaName","ref","transform","BarPage","margin","xDomain","map","date","xScale","domain","range","left","right","padding","xAxis","scale","tickFormat","tickSize","tickPadding","call","min","yScale","bottom","yAxis","ticks","colorScale","clamp","join","bandwidth","className","LinePage","theLine","x","y","curve","DATA_TYPE_NAME","PIE","BAR","LINE","PROJECT","SVG_CONTAINER_SIZE","WIDTH","document","documentElement","clientWidth","HEIGHT","clientHeight","MARGIN","top","INNER_RADIUS","OUTER_RADIUS","getRandomDate","start","end","Date","getTime","Math","random","RANDOM_FAKE_DATA","getRandomNum","floor","Div","isError","ErrorMsg","Input","onChange","label","errMsg","restProps","handleOnChange","e","val","target","src","ErrorIcon","alt","defaultProps","placeholder","disabled","Legend","legendSize","color","defaultColor","round","LegendInfo","focusValue","colors","xUnit","yUnit","findMinAndMax","TimeIcon","yValue","grade","xId","yDomain","mainLines","getElementsByClassName","beginning","getTotalLength","obj","getPointAtLength","invert","getYValue","legendColor","name","ProjectPage","useState","setData","selectedSec","setSelectedSec","inputVal","setInputVal","setIsError","setErrMsg","currentZoomState","setCurrentZoomState","svgContent","key","items","resultOfMax","_maxBy","_map","_minBy","newData","item","Array","keys","n","a","b","num","index","sec","meter","newXScale","rescaleX","node","focusSec","handleOnMouseMove","zoomBehavior","scaleExtent","translateExtent","extent","zoomState","test","handleInput","background","Button","onClick","children","dataType","MainPage","typeName","setTypeName","dataCount","setDataCount","extendProps","updateData","count","newItem","prevState","splice","length","getNewData","toUpperCase","getVisuallData","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.7022bbb4.chunk.js","sourcesContent":["import React, { useEffect, useRef, Fragment } from 'react';\nimport styled from 'styled-components';\nimport * as d3 from \"d3\";\n// import Slice from './Slice';\n\nconst Div = styled.div`\n\n`;\n\nconst PiePage = (props) => {\n  const { data, width, height, innerRadius, outerRadius } = props;\n  const myColor = ['#996464', '#8a9368', '#687d93', '#93688a', '#7f705e', '#3b4668'];\n  const svgRef = useRef(null);\n  const format = d3.format(\",.0f\");\n\n  const createPie = d3\n    .pie()\n    .value(d => d.max)\n    .sort(null);\n  \n  const createArc = d3\n    .arc()\n    .innerRadius(innerRadius)\n    .outerRadius(() => d3.select('.arc').classed('clicked')? outerRadius * 1.15 : outerRadius)\n    .cornerRadius(7)\n    .padAngle(0.02);\n  \n  const labelArc = d3.arc()\n    .outerRadius(outerRadius)\n    .innerRadius(innerRadius);\n  \n  useEffect(() => {\n    if(!data) return;\n    const svg = d3.select(svgRef.current);\n    const svgWithData = svg.selectAll(\"g.arc\").data(createPie(data));\n    const svgWithUpdate = svgWithData.enter().append(\"g\").attr(\"class\", 'arc');\n\n    const path = svgWithUpdate\n    .append(\"path\")\n    .merge(svgWithData.select(\"path.arc\"))\n    .on('mouseover', function(d, i, j){\n      pathAnim(d3.select(this), 1);\n      \n      let paths = svg.selectAll('path.arc').data();\n      const this_path_value = paths[i].value;\n      const total_value = d3.sum(paths, p => p.value);\n      svg\n      .select('.value')\n      .text(format(this_path_value));\n      svg\n      .select('.percentage')\n      .text((this_path_value / total_value * 100).toFixed(2) + '%')\n    })\n    .on('mouseout', function(d, i){\n      const thisPath = d3.select(this);\n      if (!thisPath.classed('clicked')) {\n          pathAnim(thisPath, 0);\n      }\n\n      setCenterText(svg);\n    })\n    .on('click', function(d, i, j){\n      const thisPath = d3.select(this);\n      const clicked = thisPath.classed('clicked');\n      pathAnim(thisPath, ~~(!clicked));\n      thisPath.classed('clicked', !clicked);\n\n      setCenterText(svg);\n  })\n    ;\n\n    path\n    .attr(\"class\", 'arc')\n    .merge(svg)\n    .transition()\n    .duration(500)\n    .attr(\"d\", createArc)\n    .attr(\"fill\", (d, i) => myColor[i]? myColor[i] : \"#383838\");\n\n    svgWithData.exit().remove();\n\n    const text = svgWithUpdate\n    .append(\"text\")\n    .merge(svgWithData.select(\"text\"));\n\n    text\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"alignment-baseline\", \"middle\")\n    .attr(\"transform\", d => `translate(${labelArc.centroid(d)})`)\n    .style(\"fill\", \"white\")\n    .style(\"font-size\", \"0.8rem\")\n    .style('letter-spacing', 1)\n    .text(d => format(d.value));\n\n    /* Center Start---------------------------------------------------- */\n    const center_r = innerRadius * 0.85;\n    svg\n    .append(\"circle\")\n    .attr(\"class\", \"center\")\n    .attr(\"r\", center_r)\n    .style(\"fill\", \"rgba(255, 255, 255, 0.6)\")\n    .on('mouseover', (d, i) => {\n      d3\n      .select('.center')\n      .transition()\n      .attr(\"r\", center_r * 1.1);\n    })\n    .on('mouseout', (d, i) => {\n      d3\n      .select('.center')\n      .transition()\n      .duration(500)\n      .ease(d3.easeBounce)\n      .attr(\"r\", center_r);\n    })\n    .on('click', function(d, i){\n      var paths = svg.selectAll('.clicked');\n      pathAnim(paths, 0);\n      paths.classed('clicked', false);\n      resetAllCenterText(svg);\n    });\n\n    svg\n    .append('text')\n    .attr('class', 'center-txt title')\n    .attr('y',  center_r * - 0.35)\n    .attr('text-anchor', 'middle')\n    .style('font-weight', 'bold')\n    .style('letter-spacing', 2)\n    .text('Total');\n\n    svg\n    .append('text')\n    .attr('class', 'center-txt value')\n    .attr('text-anchor', 'middle')\n    .attr('y', center_r * 0.1)\n    .style('letter-spacing', 2)\n    .text(format(d3.sum(svg.selectAll('path.arc').data(), d => d.value)));\n\n    svg\n    .append('text')\n    .attr('class', 'center-txt percentage')\n    .attr('y', center_r * 0.55)\n    .attr('text-anchor', 'middle')\n    .style('letter-spacing', 2)\n    .style('fill', '#767676');\n\n    /* Center End---------------------------------------------------- */\n\n    return () => {\n      svg.selectAll(\".center\").remove()\n      svg.selectAll('.center-txt').remove()\n    };\n  \n  }, [JSON.stringify(data)])\n\n\n  function pathAnim (aim, dir) {\n    switch(dir) {\n      case 0:\n        aim\n        .transition()\n        .duration(500)\n        .ease(d3.easeBounce)\n        .attr('d', d3\n          .arc()\n          .innerRadius(innerRadius)\n          .outerRadius(outerRadius)\n          .cornerRadius(7)\n          .padAngle(0.02)\n        );\n      break;\n\n      case 1:\n        aim\n        .transition()\n        .attr('d', d3\n          .arc()\n          .innerRadius(innerRadius)\n          .outerRadius(outerRadius * 1.15)\n          .cornerRadius(7)\n          .padAngle(0.02)\n        );\n      break;\n    }\n  }\n\n  function setCenterText(thisDonut) {\n    let paths = thisDonut.selectAll('path.arc').data();\n    const total_value = d3.sum(paths, p => p.value);\n    let sum = d3.sum(thisDonut.selectAll('.clicked').data(), d => d.value);\n\n    thisDonut\n    .select('.value')\n    .text(d => sum ? format(sum) : format(total_value));\n    thisDonut\n    .select('.percentage')\n    .text(d => sum ? (sum / total_value * 100).toFixed(2) + '%' : '');\n  }\n\n  function resetAllCenterText (thisDonut) {\n    thisDonut\n    .selectAll('.value')\n    .text(format(d3.sum(thisDonut.selectAll('path').data(), d => d.value)));\n    thisDonut\n    .selectAll('.percentage')\n    .text('');\n}\n\n\n  return (\n    <Fragment>\n      <svg\n        width={width}\n        height={height}\n      >\n      <g\n        clsaaName= \"donut\"\n        ref={svgRef}\n        transform={`translate(${width/2} ${height/2})`}\n      />\n    </svg>\n    </Fragment>\n  );\n};\n\nexport default PiePage;","import PiePage from './PiePage';\n\nexport default PiePage","import BarPage from './BarPage';\n\nexport default BarPage","import React, { useEffect, useRef, Fragment } from 'react';\nimport * as d3 from \"d3\";\n\n\nconst BarPage = (props) => {\n  const { data, width, height, margin} = props;\n  const svgRef = useRef(null);\n\n  useEffect(() => {\n    if(!data) return;\n    const svg = d3.select(svgRef.current);\n\n    /* Gen Axis Start-------------------------------*/\n    // X軸\n    const xDomain = data.map( d => d.date);\n    let xScale = d3.scaleBand()\n        .domain(xDomain)\n        .range([margin.left, width - margin.right])\n        .padding(0.4)\n  \n    const xAxis = d3.axisBottom()\n          .scale(xScale)\n          .tickFormat(d3.timeFormat('%B %d'))\n          .tickSize(0)\n          .tickPadding(12);\n\n    svg\n      .select('.x-axis')\n      .call(xAxis);\n\n    // Y軸\n    const max = d3.max(data, d => d.max); \n    const min = d3.min(data, d => d.min);\n    let yScale = d3.scaleLinear()\n        .domain([min,max])\n        .range([height - margin.bottom, margin.bottom]);\n\n    const yAxis = d3.axisLeft()\n          .scale(yScale)\n          .tickSize(0)\n          .ticks(5);\n\n    // 變色處理\n    let colorScale = d3.scaleLinear()\n        .domain([20, 60, 90])\n        .range([\"#6f3535\", \"#ffffffcf\", \"#415c42\"])\n        .clamp(true);\n\n    svg\n      .select('.y-axis')\n      .call(yAxis);\n\n    \n    /* Gen Bar Start-------------------------------*/\n    svg\n    .selectAll(\".bar\")\n    .data(data)\n    .join(\"rect\")\n    .attr('class', 'bar')\n    .style('transform', 'scale(1, -1)')\n    .attr('x', d => xScale(d.date))\n    .attr('y', -(height - margin.bottom))\n    .attr('width', xScale.bandwidth())\n    .on(\"mouseenter\",d => {\n      svg\n        .selectAll(\".tooltip\")\n        .data([d.max])\n        .join(enter => enter.append(\"text\").attr(\"y\", yScale(d.max) - 4))\n        .attr(\"class\", \"tooltip\")\n        .text(d.max)\n        .attr(\"x\", xScale(d.date) + (xScale.bandwidth()/2))\n        .attr(\"text-anchor\", \"middle\")\n        .transition()\n        .attr(\"y\", yScale(d.max) - 8)\n        .attr(\"fill\", \"#ffffffcf\")\n        .attr(\"opacity\", 1)\n    })\n    .on(\"mouseleave\", () => {\n      svg\n      .select(\".tooltip\")\n      .remove()\n    })\n    .transition()\n    .duration(500)\n    .attr(\"fill\", d => colorScale(d.max))\n    .attr('height', d => height - margin.bottom - yScale(d.max));\n     /* Gen Line End-------------------------------*/\n\n    },[data, svgRef.current])\n\n    // console.log('Project ::::::', data );\n    \n  return (\n    <Fragment>\n     <svg\n      ref={svgRef}\n      width={width}\n      height={height}\n     >\n        <g className=\"x-axis\" transform={`translate(0, ${height - margin.bottom})`} />\n        <g className=\"y-axis\" transform={`translate(${margin.left}, 0)`} />\n     </svg>\n    </Fragment>\n  );\n};\n\nexport default BarPage;","import LinePage from './LinePage';\n\nexport default LinePage","import React, { useEffect, useRef, Fragment } from 'react';\nimport * as d3 from \"d3\";\n\nconst LinePage = (props) => {\n  const { data, width, height, margin} = props;\n  const svgRef = useRef(null);\n\n  useEffect(() => {\n    if(!data) return;\n    const svg = d3.select(svgRef.current);\n\n    /* Gen Axis Start-------------------------------*/\n    // X軸\n    const xDomain = data.map( d => d.date);\n    let xScale = d3.scaleLinear()\n        .domain(d3.extent(xDomain))\n        .range([margin.left, width - margin.right]);\n  \n    const xAxis = d3.axisBottom()\n          .scale(xScale)\n          .tickFormat(d3.timeFormat('%B %d'))\n          .tickSize(0)\n          .tickPadding(12);\n\n    svg\n      .select('.x-axis')\n      .call(xAxis)\n\n    // Y軸\n    const max = d3.max(data, d => d.max);\n    const min = d3.min(data, d => d.min);\n    let yScale = d3.scaleLinear()\n        .domain([min,max+10])\n        .range([height - margin.bottom, margin.bottom]);\n\n    const yAxis = d3.axisLeft()\n          .scale(yScale)\n          .tickSize(0)\n          .ticks(5);\n\n    svg\n      .select('.y-axis')\n      .call(yAxis)\n\n\n    /* Gen Line Start-------------------------------*/\n    const theLine = d3.line()\n      .x(d => xScale(d.date))\n      .y(d => yScale(d.max))\n      .curve(d3.curveCardinal)\n    \n    svg\n    .selectAll(\".line\")\n    .data([data])\n    .join(\"path\")\n    .transition()\n    .duration(500)\n    .attr(\"d\", theLine)\n    .attr('class', 'line')\n    .attr(\"fill\", \"none\")\n    .attr(\"stroke\", \"#ffff\")\n     /* Gen Line End-------------------------------*/\n\n    //  console.log(':::::::::::', data)\n\n    },[data, svgRef.current])\n\n  return (\n    <Fragment>\n     <svg\n      ref={svgRef}\n      width={width}\n      height={height}\n     >\n        <g className=\"x-axis\" transform={`translate(0, ${height - margin.bottom})`}/>\n        <g className=\"y-axis\" transform={`translate(${margin.left}, 0)`}/>\n     </svg>\n    </Fragment>\n  );\n};\n\nexport default LinePage;","export const DATA_TYPE_NAME = {\n    PIE: 'pie',\n    BAR: 'bar',\n    LINE: 'line',\n    PROJECT: 'Project'\n}\n\nexport const SVG_CONTAINER_SIZE = {\n    WIDTH: document.documentElement.clientWidth * 0.7,\n    HEIGHT: document.documentElement.clientHeight * 0.7,\n    MARGIN: {top: 50, bottom: 30, left: 80, right: 80},\n    INNER_RADIUS: 100,\n    OUTER_RADIUS: document.documentElement.clientHeight * 0.7 * 0.4,\n}\n\nexport function getRandomDate(start, end) {\n    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\n  }\n\n\nconst RANDOM_FAKE_DATA = {\n    MIN_VALUE: 200,\n    MAX_VALUE: 2500,\n}\n\nexport function getRandomNum(){\n    return Math.floor(Math.random() * (RANDOM_FAKE_DATA.MAX_VALUE - RANDOM_FAKE_DATA.MIN_VALUE) + RANDOM_FAKE_DATA.MIN_VALUE); \n}\n\nexport function getRandomRaceResult(){\n    const numbs = [...Array(10).keys()]\n    .map(n => getRandomNum())\n    .sort((a, b) => a - b);\n\n    const result = numbs.map((num, index) => {\n        return {\n            sec: index * 5,\n            meter: num\n        }\n    });\n\n    return result\n}\n\n\nexport default{};","import React from 'react';\nimport styled from 'styled-components';\nimport ErrorIcon from '../Icon/error.svg';\n\nconst Div = styled.div`\n  margin: 0.6rem 0rem;\n  letter-spacing: 1px;\n  font-size: 0.8rem;\n  font-weight: 500;\n  .input-label{\n    margin-bottom: 0.8rem ;\n    color: rgba(255, 255, 255, 1);\n  }\n  input{\n    background: rgba(255, 255, 255, 0.6);\n    border: 2px solid transparent;\n    border-color: ${({isError}) => isError? '#b52e2e': 'transparent'};\n    outline: none;\n    padding: 0.5rem;\n    border-radius: 5px;\n    box-shadow: none;\n    width: 6rem;\n\n    &:focus{\n      box-shadow: none;\n      border-color: ${({isError}) => isError? '#b52e2e': '#62c9d5'};\n    }\n  }\n`;\n\nconst ErrorMsg = styled.div`\n  display: flex;\n  margin-top: 0.5rem;\n .error-icon{\n    width: 1rem;\n    margin-right: 0.5rem;\n  }\n  .error-text{\n    color: #b52e2e;\n  }\n`;\n\nconst Input = (props) => {\n  const { value, onChange, label, errMsg, isError, ...restProps } = props;\n  function handleOnChange(e){\n    const val = e.target.value;\n    onChange(val);\n  }\n\n  return (\n    <Div isError={isError} >\n      <div className=\"input-label\"> {label} </div>\n      <input\n        value={value}\n        onChange={e => handleOnChange(e)}\n        {...restProps}\n      />\n      {isError? \n        <ErrorMsg>\n        <img src={ErrorIcon} className=\"error-icon\" alt=\"\"/>\n        <div className=\"error-text\"> \n          {errMsg} \n        </div> \n        </ErrorMsg>\n        : null}\n    </Div>\n  );\n};\n\nInput.defaultProps = {\n  placeholder: '',\n  onChange: () => {},\n  disabled: false,\n  isError: false,\n  label: null,\n  errMsg: null\n}\n\nexport default Input;","import React from 'react';\nimport * as d3 from \"d3\";\nimport styled from 'styled-components';\nimport TimeIcon from '../../Icon/time.svg'\n\nconst Div = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 1rem 0rem;\n  letter-spacing: 1px;\n  font-size: 0.8rem;\n  width: 70%;\n  overflow: auto;\n  position: relative;\n  .box {\n    display: flex;\n    margin: 0.5rem 0rem;\n    align-items: center;\n    .time-icon {\n      width: 1.2rem;\n    }\n    .text {\n      margin-left: 0.6rem ;\n      color: #FFF;\n    }\n    .y-value{\n      margin: 0rem 0.6rem ;\n      color: #FFF;\n      white-space: nowrap;\n    }\n  }\n`;\n\nconst Legend = styled.div`\n  width: ${({legendSize}) => legendSize};\n  height: ${({legendSize}) => legendSize};\n  background-color: ${({color, defaultColor}) => !!color? color : defaultColor};\n  border-radius: ${({round})=>round? '10rem': '3px'};\n`;\n\nconst LegendInfo = (props) => {\n  const { \n    data, \n    focusValue, \n    colors, \n    xUnit, \n    yUnit, \n    defaultColor, \n    legendSize, \n    findMinAndMax,\n    width, height, margin\n   } = props;\n  \n  function getYValue(i, val) {\n    let xDomain = findMinAndMax('sec', data.map(d=> d.grade));\n    let xScale = d3.scaleLinear()\n        .domain(xDomain)\n        .range([margin.left, width-margin.right]);\n    const xId = xScale(val);\n   \n    let yDomain = findMinAndMax('meter', data.map(d=> d.grade));\n    let yScale = d3.scaleLinear()\n        .domain(yDomain)\n        .range([height - margin.bottom, margin.top]);\n    const mainLines = document.getElementsByClassName('main-line');\n    let beginning = 0;\n    let end = mainLines[i].getTotalLength();\n    let obj = null;\n\n    while (true){\n      let target = Math.floor((beginning + end) / 2);\n      obj = mainLines[i].getPointAtLength(target);\n      if ((target === end || target === beginning) && obj.x !== xId) {\n        break;\n      }\n      if (obj.x > xId){\n        end = target\n      }\n      else if (obj.x < xId){\n        beginning = target\n      }\n      else break; //position found\n    }\n\n    const result = yScale.invert(obj.y).toFixed(0);\n\n    return result;\n  }\n\n  return (\n    <Div legendSize={legendSize}>\n      <div className=\"box\"> \n        <img src={TimeIcon} className=\"time-icon\" alt=\"\"/>\n        {focusValue || focusValue === 0 ? <div className=\"text\"> {focusValue} {xUnit} </div> : null} \n      </div>\n      {\n        data && data.map((d,i) => {\n          const yValue = focusValue || focusValue === 0? getYValue(i, focusValue) : null;\n          const legendColor = colors[i] \n          return (\n            <div className=\"box\"> \n            <Legend\n              round\n              color={legendColor} \n              defaultColor={defaultColor} \n              legendSize={legendSize} \n            />\n            <div className=\"text\"> {d.name} </div>\n            {yValue || yValue === 0 ? <div className=\"y-value\"> {yValue} {yUnit} </div>  : <div />}\n          </div>)\n        })\n      }\n    </Div>\n  );\n};\n\nLegendInfo.defaultProps = {\n  data: null,\n  focusValue: '',\n  colors: [],\n  xUnit: '', \n  yUnit: '',\n  defaultColor: '#FFF',\n  legendSize: '1.1rem',\n  round: false,\n}\n\n\nexport default LegendInfo;","import React, { useEffect, useRef, Fragment, useState } from 'react';\nimport styled from 'styled-components';\nimport * as d3 from \"d3\";\nimport _maxBy from 'lodash/maxBy';\nimport _minBy from 'lodash/minBy';\nimport _map from 'lodash/map';\nimport { getRandomRaceResult } from '../../MainPage/Const';\nimport Input from '../../components/Input';\nimport LegendInfo from './LegendInfo';\n\nconst Div = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  left: 2%;\n  top: 18%;\n  flex-direction: column;\n  width: 20%;\n`;\n\nconst ProjectPage = (props) => {\n  const { width, height, margin } = props;\n  const [data, setData] = useState(null);\n  const [selectedSec, setSelectedSec] = useState(null);\n  const [inputVal, setInputVal] = useState('');\n  const [isError, setIsError] = useState(false);\n  const [errMsg, setErrMsg] = useState(null);\n  const [currentZoomState, setCurrentZoomState] = useState(null);\n  const svgRef = useRef();\n  const svg = d3.select(svgRef.current);\n  const svgContent = svg.select(\".content\");\n  // 顏色處理\n  const myColor = ['#f89c9c', '#51b2a1', '#dbc87f', '#de8eec'];\n\n\n  useEffect(() => {\n    const fakeName = ['Chole', 'Jay']\n    const newData = fakeName.map(item=>{\n      return{\n        name: item,\n        grade: getRandomRaceResult()\n      }\n    })\n    setData(newData);\n  }, [])\n\n  useEffect(() => {\n    if(!data) return;\n\n    /* Gen Axis Start-------------------------------*/\n    // X軸\n    let xDomain = findMinAndMax('sec', data.map(d=> d.grade));\n    let xScale = d3.scaleLinear()\n        .domain(xDomain)\n        .range([margin.left, width-margin.right]);\n\n    if (currentZoomState) {\n      const newXScale = currentZoomState.rescaleX(xScale);\n      xScale\n      .domain(newXScale.domain());\n    }\n  \n    const xAxis = d3.axisBottom()\n          .scale(xScale)\n          .tickSize(0)\n          .tickPadding(12)\n\n    svg\n    .select('.x-axis')\n    .call(xAxis)\n\n    // x軸 label\n    svg\n    .selectAll(\".axis-label--x\")\n    .data([0])\n    .join(\"text\")\n    .attr('class', 'axis-label--x')\n    .attr(\"x\", width - 40 )\n    .attr(\"y\", height - margin.bottom + 5 )\n    .text(\"(Sec.)\");   \n\n    // Y軸\n    let yDomain = findMinAndMax('meter', data.map(d=> d.grade));\n    let yScale = d3.scaleLinear()\n        .domain(yDomain)\n        .range([height - margin.bottom, margin.top]);\n\n    const yAxis = d3.axisLeft()\n          .scale(yScale)\n          .tickSize(0)\n          .ticks(5)\n          .tickPadding(12);\n\n    svg\n    .select('.y-axis')\n    .call(yAxis)\n\n    // y軸 label\n    svg\n    .selectAll(\".axis-label--y\")\n    .data([0])\n    .join(\"text\")\n    .attr('class', 'axis-label--y')\n    .attr(\"x\", margin.left )\n    .attr(\"y\", margin.top - 20 )\n    .text(\"(M)\");    \n    /* Gen Axis End---------------------------------------*/ \n\n    /* Gen Line Start-------------------------------------*/\n    const theLine = d3.line()\n      .x(d => xScale(d.sec))\n      .y(d => yScale(d.meter))\n      .curve(d3.curveCardinal)\n      \n    svgContent\n    .selectAll(\".main-line\")\n    .data(data)\n    .join(\"path\")\n    .attr('class', 'main-line')\n    // .transition()\n    .attr(\"d\", d => theLine(d.grade))\n    .attr(\"fill\", \"none\")\n    .attr(\"stroke\", (d,i) => myColor[i]? myColor[i] : '#ffffffb3')\n    .attr(\"stroke-width\", 3)\n    /* Gen Line End---------------------------------------*/\n\n    // dot\n    svgContent\n    .selectAll('circle-group')\n    .data(data)\n    .enter()\n      .selectAll('.dot')\n      .data(d => d.grade)\n      .join('circle')\n      .attr('class', 'dot')\n      .attr('cx', d => xScale(d.sec))\n      .attr('cy', d => yScale(d.meter))\n      .attr('r', 2.5)\n    \n    /* Focus Line -----------------------------------------*/\n    svg\n    .selectAll('rect')\n    .data([0])\n    .join('rect')\n    .attr('x', 0)\n    .attr('y', margin.top)\n    .attr('width', width)\n    .attr('height', height - margin.bottom - margin.top)\n    .attr('fill', 'none')\n    .attr('stroke', 'none')\n    .attr('pointer-events', 'all')\n    .on('mousemove', () => {\n      const x = d3.mouse(svg.node())[0];\n      let focusSec = xScale.invert(x).toFixed(0);\n      handleOnMouseMove(focusSec);\n    });\n    /* Focus End -----------------------------------------*/\n\n    // zoom\n    const zoomBehavior = d3.zoom()\n      .scaleExtent([0.5, 2])\n      .translateExtent([\n        [margin.left,  margin.top],\n        [width-margin.right, height - margin.bottom]\n      ])\n      .extent([\n        [margin.left,  margin.top],\n        [width-margin.right, height - margin.bottom]\n      ])\n      .on(\"zoom\", () => {\n        const zoomState = d3.zoomTransform(svg.node());\n        setCurrentZoomState(zoomState);\n\n      });\n      \n      svg.call(zoomBehavior);\n\n\n    },[JSON.stringify(data), currentZoomState])\n\n  useEffect(() => {\n    if(!data) return;\n\n    // focus的線\n    let xDomain = findMinAndMax('sec', data.map(d=> d.grade));\n    let xScale = d3.scaleLinear()\n        .domain(xDomain)\n        .range([margin.left, width-margin.right]);\n    svgContent\n    .selectAll('.selected-sec-line')\n    .data([0])\n    .join('line')\n    .attr('class', 'selected-sec-line')\n    .attr('x1', xScale(selectedSec))\n    .attr('x2', xScale(selectedSec))\n    .attr('y1', margin.top)\n    .attr('y2', height - margin.bottom)\n    .style('stroke', '#FFF')\n    .style(\"stroke-width\", 0.4)\n    .style(\"stroke-dasharray\", (5,5));\n\n  }, [selectedSec])\n\n    function findMinAndMax(key, items){\n      const resultOfMax = _maxBy(_map(items, i => _maxBy(i, key)), key);\n      const resultOfMin = _minBy(_map(items, i => _minBy(i, key)), key)\n\n      return [resultOfMin[key], resultOfMax[key]];\n    }\n\n    function handleOnMouseMove(focusSec){\n      let xDomain = findMinAndMax('sec', data.map(d=> d.grade));\n      if(focusSec <= xDomain[0] ){\n        focusSec = xDomain[0];\n      }\n      if(focusSec >= xDomain[1]){\n        focusSec = xDomain[1];\n      }\n      setIsError(false);\n      setErrMsg(null);\n      setInputVal('');\n      setSelectedSec(focusSec);\n    }\n\n    function handleInput(val){\n      setInputVal(val);\n      let xDomain = findMinAndMax('sec', data.map(d=> d.grade));\n      // 判斷是否純數字\n      var reg=/^[1-9]\\d*$|^0$/;\n      if(val < xDomain[0] ){\n        val = xDomain[0];\n        setIsError(true);\n        setErrMsg('已小於最低秒數')\n      }\n      if(val > xDomain[1]){\n        val = xDomain[1];\n        setIsError(true);\n        setErrMsg('已大於最高秒數')\n      }\n      if(!reg.test(val) && val!==''){\n        val = xDomain[0]\n        setErrMsg('請輸入整數');\n        setIsError(true);\n      }\n      if(val===null || val===''){\n        val = xDomain[0];\n        setIsError(false);\n        setErrMsg(null);\n      }\n      setSelectedSec(val);\n    }\n\n  return (\n    <Fragment>\n      <Div>\n        <Input\n          label=\"請輸入秒數\"\n          isError={isError}\n          onChange={val => handleInput(val)} \n          errMsg={errMsg}\n          value={inputVal}\n        />\n        <LegendInfo\n          svg={svg}\n          data={data}\n          focusValue={selectedSec}\n          xUnit=\"sec\"\n          yUnit=\"m\"\n          colors={myColor}\n          findMinAndMax={findMinAndMax}\n          width={width}\n          height={height}\n          margin={margin}\n        />\n     </Div>\n     <svg\n      ref={svgRef}\n      width={width}\n      height={height}\n     >\n        <g className=\"content\" />\n        <g className=\"x-axis\" transform={`translate(0, ${height - margin.bottom})`}/>\n        <g className=\"y-axis\" transform={`translate(${margin.left}, 0)`}/>\n     </svg>\n    </Fragment>\n  );\n};\n\nexport default ProjectPage;","import ProjectPage from './ProjectPage';\n\nexport default ProjectPage","import React from 'react';\nimport styled from 'styled-components';\n\nconst Div = styled.div`\n  cursor: pointer;\n  margin: 0.5rem;\n  background: ${({background})=>background};\n  color: ${({color})=>color};\n  padding: 0.6rem 0.5rem;\n  border-radius: 5px;\n  letter-spacing: 1px;\n  font-size: 0.8rem;\n  font-weight: 500;\n  text-align: center;\n\n  &:hover{\n    box-shadow: 0px 0px 15px 0px rgba(255,255,255,0.6);\n  } \n  &.disabled{\n    opacity: 0.5;\n    cursor: not-allowed;\n    &:hover{\n      box-shadow: none;\n    }\n  }\n\n`;\n\nconst Button = (props) => {\n  const { onClick, disabled, children } = props;\n  return (\n    <Div\n      {...props}\n      className={disabled ? \"disabled\": \"\"}  \n      onClick={onClick}\n      disabled={disabled}\n    >\n      {children}\n    </Div>\n  );\n};\n\nButton.defaultProps = {\n  onClick: () => {},\n  disabled: false,\n  color: \"#233e58\",\n  background: \"rgba(255, 255, 255, 0.8)\",\n  children: ''\n}\n\nexport default Button;","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport PiePage from '../D3Practice/PiePage';\nimport BarPage from '../D3Practice/BarPage';\nimport LinePage from '../D3Practice/LinePage';\nimport ProjectPage from '../D3Practice/ProjectPage';\nimport { DATA_TYPE_NAME, SVG_CONTAINER_SIZE, getRandomDate, getRandomNum } from './Const';\nimport Button from '../components/Button';\n\nconst Div = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  width: 100vw;\n  height: 100vh;\n  background: linear-gradient(50deg, #48284c 0%, #233e58 100%);\n  /* background: linear-gradient(100deg, rgb(182, 40, 111) 50%, #ac2066 0); */\n  padding: 5rem 0rem;\n  position: relative;\n\n  /* upper bar -------------------------------------------------- */\n  .upper-bar {\n    display: flex;\n    align-items: center;\n    .button {\n      cursor: pointer;\n      margin: 0 1rem;\n      padding: 0.5rem 0rem;\n      font-size: 1.2rem;\n      color: rgba(255, 255, 255, 1);\n      letter-spacing: 2px;\n      text-align: center;\n      &.--active {\n        border-bottom: solid 4px rgb(152, 136, 40, 1);\n      }\n\n      &:hover{\n        color: rgba(255, 255, 255, 0.6);\n        border-bottom: solid 4px rgb(152, 136, 40, 0.3);\n      }\n    }\n  }\n\n  /* content box -------------------------------------------------- */\n  .content-box {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: rgba(255, 255, 255, 0.2);\n    border-radius: 5px;\n    padding: 1rem;\n    margin: 2rem 0rem;\n    /* position: relative; */\n    .x-axis , .y-axis {\n      color: rgba(255, 255, 255, 0.9);\n      letter-spacing: 1px;\n      & path{\n        stroke: rgba(255, 255, 255, 0.4);\n      }\n    }\n    .axis-label--x, .axis-label--y{\n      fill: rgba(255, 255, 255, 0.6);\n      letter-spacing: 1px;\n      text-anchor: middle;\n      font-size: 0.8rem;\n    }\n    .dot{\n      fill: transparent; \n      stroke: #FFF;\n    }\n  }\n\n  /* bottom zone -------------------------------------------------- */\n  .bottom-zone{\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    left: 2%;\n    top: 17%;\n\n    div:first-child{\n      margin-bottom: 2rem;\n    }\n  }\n`;\n\n\nconst dataType = ['LINE', 'BAR', 'PIE', 'PROJECT'];\n\nconst MainPage = (props) => {\n  const [typeName, setTypeName] = useState(DATA_TYPE_NAME.PIE);\n  const [dataCount, setDataCount] = useState(6);\n  const [data, setData] = useState(null);\n\n  const extendProps = {\n    data,\n    width: SVG_CONTAINER_SIZE.WIDTH,\n    height: SVG_CONTAINER_SIZE.HEIGHT,\n    margin: SVG_CONTAINER_SIZE.MARGIN,\n    innerRadius: SVG_CONTAINER_SIZE.INNER_RADIUS,\n    outerRadius: SVG_CONTAINER_SIZE.OUTER_RADIUS,\n  }\n\n  useEffect(()=>{ \n    getNewData();\n  }, [])\n\n  function updateData(count) {\n    if(count === 1 && dataCount < 12){\n      let a = getRandomNum();\n      let b = getRandomNum();\n      let max = a > b? a : b;\n      let min = a > b? b : a;\n      const newItem = {\n        date: getRandomDate(new Date(2020, 0, 1), new Date(2020, 11, 31)),\n        max,\n        min,\n      }\n      const newData = [...data, newItem].sort(function(a, b) {\n        return a.date - b.date;\n    })\n      setData(newData);\n      setDataCount(prevState => prevState + 1);\n\n    }\n    if(count === -1 && dataCount > 6){\n      const newData = data.splice(0, data.length-1);\n      setData(newData);\n      setDataCount(prevState => prevState - 1);\n    }\n  }\n\n  function getNewData() {\n    const newData = [...Array(dataCount).keys()].map(item => {\n      let a = getRandomNum();\n      let b = getRandomNum();\n      let max = a > b? a : b;\n      let min = a > b? b : a;\n      return {\n        date: getRandomDate(new Date(2020, 0, 1), new Date(2020, 11, 31)),\n        max,\n        min,\n      }\n    })\n    .sort(function(a, b) {\n      return a.date - b.date;\n  })\n    setData(newData);\n  }\n\n  function getVisuallData(){\n    switch(typeName){\n      case DATA_TYPE_NAME.PIE:\n        return <PiePage {...extendProps}/>\n      case DATA_TYPE_NAME.BAR:\n          return <BarPage {...extendProps}/> \n      case DATA_TYPE_NAME.LINE:\n          return <LinePage {...extendProps}/>\n      case DATA_TYPE_NAME.PROJECT:\n          return <ProjectPage {...extendProps}/>\n      default:\n        return;\n    }\n  }\n\n  function handleSwitch(name){\n    // console.log('type name ::::::', name)\n    setTypeName(name)\n  }\n\n  return (\n    <Div>\n      <div className=\"upper-bar\">\n        {dataType.map(item => (\n          <div \n            key={item}\n            className={typeName===DATA_TYPE_NAME[item]? \"button --active\" : \"button\"}\n            onClick={()=> handleSwitch(DATA_TYPE_NAME[item])}\n          >\n            {item.toUpperCase()}\n          </div>\n        ))}\n      </div>\n      <div className=\"content-box\">\n        {getVisuallData()}\n      </div>\n      {typeName !== DATA_TYPE_NAME.PROJECT ?\n        < div className=\"bottom-zone\">\n        <Button \n          onClick={getNewData}>\n          Reset\n        </Button>\n        <Button \n          onClick={()=>updateData(1)}\n          disabled={dataCount >= 12}\n        >\n          Add Item\n        </Button>\n        <Button \n          onClick={()=>updateData(-1)}\n          disabled={dataCount <= 6}\n        >\n          Remove Item\n        </Button>\n      </ div> : null}\n    </Div>\n  );\n};\n\nexport default MainPage;","import MainPage from './MainPage';\n\nexport default MainPage","import React, { Fragment } from 'react';\nimport './App.css';\nimport MainPage from './MainPage';\n\nfunction App() {\n  return (\n    <Fragment>\n      <MainPage />\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/error.c38ac810.svg\";","module.exports = __webpack_public_path__ + \"static/media/time.0a1ca4e3.svg\";"],"sourceRoot":""}